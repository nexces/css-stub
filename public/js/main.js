document.addEventListener('DOMContentLoaded', function () {
    var $container = document.querySelector('.siteHeader');
    var $menuSwitch = document.querySelector('#nav-toggle');
    console.log('menu-collapse :: init');
    $menuSwitch.addEventListener('click', function (e) {
        console.log('menu-collapse :: handling event on #nav-toggle');
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();
        $container.classList.toggle('nav-active');
    }, false);
    document.body.addEventListener('click', function () {
        console.log('menu-collapse :: handling event on body');
        $container.classList.remove('nav-active');
    }, false);
}, false);
var Slider = (function () {
    function Slider(sliderSelector) {
        var _this = this;
        this.nextSlideDelay = 5000;
        this.transition = 'fading';
        this.autoProgress = true;
        this.allReady = false;
        this.heightGuard = function () {
            _this.$slidesContainer.style.height = null;
            _this.$slidesContainer.style.height = _this.$slidesContainer.clientHeight + 'px';
        };
        this.handleHover = function (e) {
            console.debug('Slider::handleHover()');
            if (e.type === 'mouseover') {
                _this.autoProgress = false;
                _this.blockAutoProgress();
            }
            if (e.type === 'mouseout') {
                _this.autoProgress = true;
                _this.resumeAutoProgress();
            }
        };
        this.blockAutoProgress = function () {
            console.debug('Slider::blockAutoProgress()');
            clearTimeout(_this.nextSlideTimeout);
            _this.nextSlideTimeout = 0;
        };
        this.resumeAutoProgress = function () {
            console.debug('Slider::resumeAutoProgress()');
            if (_this.allReady && _this.autoProgress && _this.nextSlideDelay > 0) {
                _this.nextSlideTimeout = setTimeout(_this.loadSlide, _this.nextSlideDelay);
            }
        };
        this.loadSlide = function (num) {
            _this.blockAutoProgress();
            if (!_this.allReady) {
                return false;
            }
            var $current, currentData, $next, nextData, currentNum, nextNum, $currentDot, $nextDot;
            $current = _this.$slider.querySelector('.slide.active');
            if (!num) {
                if (!$current) {
                    $next = _this.$slider.querySelector('.slide.initial');
                }
                else {
                    $next = _this.$slider.querySelector('.slide.active + .slide');
                }
                if (!$next) {
                    $next = _this.$slider.querySelector('.slide:nth-child(1)');
                }
            }
            else {
                $next = _this.$slider.querySelector('.slide:nth-child(' + num + ')');
            }
            nextData = $next.dataset;
            if ($current) {
                $current.classList.remove('active');
                currentData = $current.dataset;
                currentNum = currentData.num || $current.className.match(/slide-(\d+)/)[1];
                if (_this.$dotsContainer) {
                    $currentDot = _this.$dotsContainer.querySelector('.dot:nth-child(' + currentNum + ')');
                    $currentDot.classList.remove('active');
                }
            }
            $next.classList.remove('initial');
            $next.classList.add('active');
            nextNum = nextData.num || $next.className.match(/slide-(\d+)/)[1];
            _this.$slider.className = _this.$slider.className.replace(/slide-(\d+)-active/, '');
            _this.$slider.classList.add('slide-' + nextNum + '-active');
            if (_this.$dotsContainer) {
                $nextDot = _this.$dotsContainer.querySelector('.dot:nth-child(' + nextNum + ')');
                $nextDot.classList.add('active');
            }
            _this.resumeAutoProgress();
        };
        this.arrowClick = function (e) {
            var $next, nextData, num, $arrow = e.target;
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
            if ($arrow.classList.contains('prev')) {
                $next = _this.$slider.querySelector('.slide + .slide.active');
                if ($next) {
                    $next = $next.previousElementSibling;
                }
                else {
                    $next = _this.$slider.querySelector('.slide:last-of-type');
                }
            }
            if ($arrow.classList.contains('next')) {
                $next = (_this.$slider.querySelector('.slide.active + .slide') || _this.$slider.querySelector('.slide:nth-child(1)'));
            }
            nextData = $next.dataset;
            num = nextData.num || $next.className.match(/slide-(\d+)/)[1];
            _this.loadSlide(num);
        };
        this.dotClick = function (e) {
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
            var $dot = e.target;
            var dotData = $dot.dataset;
            var num = parseInt(dotData.num || e.target.className.match(/slide-(\d+)/)[1]);
            _this.loadSlide(num);
        };
        this.imgReadyNotification = function (e) {
            var $img = e.target;
            var imgData = $img.dataset;
            imgData.ready = 'true';
            _this.heightGuard();
        };
        this.imgReadyWait = function () {
            var $$img = _this.$slider.querySelectorAll('.slide img[data-ready="false"]');
            if ($$img.length > 0) {
                setTimeout(_this.imgReadyWait, 100);
                _this.$slider.classList.add('waiting');
                return false;
            }
            _this.allReady = true;
            _this.$slider.classList.remove('waiting');
            _this.$slider.classList.add('ready');
            _this.loadSlide();
        };
        console.log('Slider::constructor()');
        this.$slider = document.querySelector(sliderSelector);
        if (!this.$slider) {
            console.warn('Slider::constructor() => no slider found via "%s"', sliderSelector);
            return;
        }
        if (this.$slider.classList.contains('sliding')) {
            this.transition = 'sliding';
        }
        var sliderData = this.$slider.dataset;
        if (sliderData.delay) {
            this.nextSlideDelay = parseInt(sliderData.delay);
        }
        this.$slidesContainer = this.$slider.querySelector('.slides');
        if (!this.$slidesContainer) {
            console.error('Slider::constructor() => Slides should be placed in ".slides" container');
            return;
        }
        this.$$slides = this.$slidesContainer.querySelectorAll('.slide');
        if (this.$$slides.length == 0) {
            console.log('Slider::constructor() => nothing to rotate');
            return;
        }
        this.$dotsContainer = this.$slider.querySelector('.dots');
        if (this.$$slides.length > 1) {
            this.$slider.classList.add('controllable');
        }
        this.$slider.addEventListener('mouseover', this.handleHover, false);
        this.$slider.addEventListener('mouseout', this.handleHover, false);
        if (this.$slider.querySelector('.prev')) {
            this.$slider.querySelector('.prev').addEventListener('click', this.arrowClick, false);
        }
        if (this.$slider.querySelector('.next')) {
            this.$slider.querySelector('.next').addEventListener('click', this.arrowClick, false);
        }
        if (this.transition == 'sliding') {
            this.$slidesContainer.style.width = (this.$$slides.length * 100) + '%';
        }
        for (var i = 0; i < this.$$slides.length; i++) {
            var $slide = this.$$slides[i];
            var slideData = $slide.dataset;
            slideData.num = (i + 1).toString();
            $slide.classList.add('slide-' + slideData.num);
            if (this.$dotsContainer) {
                var $currentDot = document.createElement('span');
                var currentDotData = $currentDot.dataset;
                $currentDot.className = 'dot';
                currentDotData.num = (i + 1).toString();
                $currentDot.classList.add('slide-' + currentDotData.num);
                $currentDot.addEventListener('click', this.dotClick, false);
                this.$dotsContainer.appendChild($currentDot);
            }
            var $$imgs = $slide.querySelectorAll('img');
            for (var i2 = 0; i2 < $$imgs.length; i2++) {
                var $img = $$imgs[i2];
                var imgData = $img.dataset;
                imgData.ready = $img.complete ? 'true' : 'false';
                $img.addEventListener('load', this.imgReadyNotification);
            }
            var $imgSrc = $slide.querySelector('.src');
            if ($imgSrc) {
                $slide.style.backgroundImage = 'url(' + $imgSrc.src + ')';
            }
        }
        this.heightGuard();
        window.addEventListener('resize', this.heightGuard, false);
        this.imgReadyWait();
    }
    return Slider;
})();
//# sourceMappingURL=data:application/json;base64,